See comments in Excalidraw and below notes on draft specs. Let me know if you have any questions.

 

Intro:
Capitalize State when using as jurisdiction. Or use “jurisdiction” so that it is not confused with software system object state. For example in Intro paragraph when you say “ state in which the conclusion is valid”

 

Goals 
We aim to create a graph database model and web based user interface capable of deployment in any legal practice that enables a natural language  search of the firm’s enhanced knowledge base that is extensible by any of the firm’s internally and externally sourced data repositories. The system will include a user interface that allows for the capture and presentation of the law firm’s assumptions and conclusions about the law with all sources for such conclusions cited to relied upon authorities. Each assumption and conclusion will be version controlled. 

 

A proof of concept of the system will be run at Shirk Law in its mortgage banking practice area, with subscription access to Shirk Law clients. However, the larger design goal is for resale to other law firms, and with additional authority hierarchies and user interface adaptation, for non-attorney uses. 

 

The system will have:

Internal users who are lawyers and paralegals that will:

A)     Design the presentation user interface and default editable properties, labels, etc. including establishing user authority levels (if so authorized).

B)     Generate conclusions from legal research and store those conclusions with citation to the resources relied upon in performing that research. These cited resources may include ingested materials or be external resources with traditional citations and/or URL links. 

C)    Allow management to review employee users’ work and determine when that work is ready to publish. 

D)    Organize materials into libraries that tie related documents together for subscriptions (these are groups of presentation UIs that form the basis for a subscription or for the scope of a search).  

E)     Establish the scope of publication, which may: be limited to internal users, be accessible to various classes of subscribing clients, be proprietary to specific clients, etc. 

F)      Future versions will allow users to identify resources for ingestion, identify key elements in representative resources and train AI tools to ingest them with automatic updates to designated libraries (E.g. regulatory enforcement actions with identified extraction elements like: parties, asserted violations, penalties, number of affected victims, etc.). 

 

External users who are clients that will:

A)     View the firm’s charts, memorandums, etc.;

B)     Perform natural language query on content authorized for access by user/client;

C)    Comment on or add notes to those viewable documents, if so authorized;

D)    Edit viewable documents, if so authorized.

 

These tools will greatly improve the experience of creating deliverables for the law firm’s clients that leverage this increased detail and accuracy.

 

The system will have capacity to document very deeply nested relationships but can also store and manage simple concepts like the preliminary hypothesis of an advising attorney or the desired outcome of a requesting client. In this way the system can be very sparsely or extremely densely populated with a visual representation as a node graph showing the degree of research supporting the conclusion and thus supporting the level of confidence.

 

A key differentiator in this system is that it will manage user extensible authority hierarchies. This is necessary because all citations do not carry the same weight of authority. All source materials will be tied to one or more authority hierarchies. For example: an authority hierarchy of U.S. law would include: the Constitution, Legislative statutes, Executive regulations and Judicial interpretations at both federal and state levels (it is more complicated than it sounds). Various authority hierarchies may be monetized as standards along with customized ingestion tools. 

 

In a future release, users will be able to ingest materials from various file formats and from material scraped from web sites. This will allow law firms to expand their corpora from their own original works by ingesting external materials. There will be an interface for firm users to subscribe to data feeds, make requests through API’s, and scrape public records for ingestion at a level of detail never before accessible.

 

Organizing materials into searchable libraries, allows system administrators to designate authorized users and the scope of that use. For example: data ingested from materials used in discovery phase of litigation may only be used for a single case, other data may be limited to the client engaging the firm to complete proprietary research, and other data may be developed by the firm and monetized through distribution to subscribers. 

 

We also aim to create tools to greatly improve the firm’s clients’ experience in both requesting and interacting with firm deliverables. The firm’s clients will receive access to the firm’s deliverables (memos, opinions, etc.) through the firm’s website, and all deliverables will be version controlled. Clients may also subscribe to various other libraries, and benefit from visualization into the scope and authority hierarchies applicable to a particular document to increase confidence in conclusions.

 

What problems are we trying to solve?
Currently, the relationships between legal conclusions and their supporting information are stored by Shirk Law in memorandums, letters, and charts. Each addresses large questions of applications to broad fact patterns or very specific circumstances but do not store discrete conclusions of law relied upon in those materials in a manner that allows for effective reuse and version controls. By relating all stored materials to the legal a authorities relied upon in a graph database the relationships of all uses and changes in understanding in the various circumstances will be visually represented and provide for much MIT’s rapid retrieval of prior work effort and conclusions of law s as well a allow those concepts to be linked and be the basis for grounding question and answer interface for both researchers and clients. 

By storing our legal conclusions with better detail and accuracy, we aim to be able to automate the answers to questions like:

·         "Have I answered this question about the law before?"

·         "Where else have I cited this conclusion I made?"

·         "What other conclusions reference this authority?"

 

What is the scope of this specification?
What initiatives are needed for our MVP?
In addition to the 4 already identified, add:

User interface to create new nodes and relationships in the graph db.
User interface to design a presentation in charts or memorandums/letters of identified data (user interface) by selecting nodes and relationships for inclusion and designating their position in a chart or document style display. This will also allow authorized user to specify properties, labels, etc. visible to employee users when compiling the material that populates the nodes included in the presentation. In other words, these presentation designs are layout templates that have a read and edit version.
Ability for user to specify new nodes for presentation (e.g. chart cells) that do not yet exist in the db, but will exist when chart is completed and need placeholder for employees to know that they are supposed to reach conclusions where blank cells exist.
Version control with comparison (relationship type “version of”)
Ability to construct authority hierarchies that will have relationships with other content nodes and assist in weighting reliability of the conclusions
Ability to perform natural language search and retrieve scope from graph database to return grounded results (a future release may include grounded results augmented generation of LLM summaries of findings). 
Ability to create legal element libraries which can form the basis for presented assumptions that when selected will establish compliance or violation of a modeled law. This will form the basis for color coding the chart based on client supplied assumption’s that are prompted by the legal element hierarchy


What are the problems that we are aiming to solve?

What is the purpose of this product?

A data repository with user extensible data model and user definable data presentation. Additional tool to ingest external documents that are stored as chunks and 
What is the scope of this product?

Definitions and Acronyms

Assumptions/Dependencies

Functional Requirements

Being able to understand our body of legal data by how it's related to each other.

able to be reassembled through the presentation tool for display to users. Data will be collected, curated, expanded, and queried by law firm employees and will be 
viewed and queried by clients.   

Access to any data we have ingested through query and visualization of relationships. Able to use the graph db to specify the authority hierarchy of data, which is just another 
relationship to stored data tying it to an authority hierarchy. There may be more than one authority hierarchy, for example: U.S. Law hierarchy, User permission hierarchy, Data 
Publication hierarchy, etc. (less certain about the last two than the first, the last two might be better as properties). 

                                                                MVP includes:
Graph db repository;  
Visual graph presentation display tool (hopefully already exists); 
Presentation/Editor Designer (Chart Builder); This presents node labels and properties for selection along with relationships and label properties of related nodes, then lets user specify
  layout, whether in chart, document, blob, or other form. Stores this in a presentation node. Based on user authority, may allow user to CRUD properties, labels, new nodes, new 
  relationships, etc. User may indicate nodes/properties/relationships/labels (NPRL) that are editable at various levels of authority through related authority nodes that may be reused 
  for many NPRL.
Presentation UI renders data contents according to presentation design. Exposes appropriate versions and identified properties as informed by presentation design. 
Data Editor UI exposes additional editing features in Presentation UI. Based on user authority, may allow user to CRUD properties, labels, new nodes, new relationships, etc. 
Version control on all nodes and relationships in Graph DB


Grammar and spell checking 
Formatting: paragraph, font (for words within sentence, not just whole block), numbering styles for auto-numbering
Responsive fast search and retrieval
Must allow editing within nodes from the presentation display (but may maximize a cell from display to give more editing space)
Show limited or full data repository graphically: limited to nodes in selected context (i.e. Presentaiton UI) or pop out to show graph of all data with relationships that the user is 
  authorized to see. 

MVP will only store URLs to law and cases, we will not ingest primary law in initial product deployment
Web scraping ingestion tool will be close following deployment, but not in MVP
Graph and image support may come in later version, but should have chart and document options in MVP


Libraries - Groups of nodes and relationships derived from similar source (E.g. Enforcement Actions, Examination Findings, Contracts, etc.).
Authority Hierarchies - A library with the special purpose of creating a standard form of relationships that represent weighted authority of the source materials (E.g. U.S. Laws, User 
  Access Permissions, etc.).
Consider adoption of and visibility into SALI data tags where possible https://www.sali.org


Assumptions/Dependencies

Functional Requirements

Grammar and spell checking 
Formatting: paragraph, font (for words within sentence, not just whole block), numbering styles for auto-numbering
Responsive fast search and retrieval
Must allow editing within nodes from the presentation display (but may maximize a cell from display to give more editing space)
Show limited or full data repository graphically: limited to nodes in selected context (i.e. Presentaiton UI) or pop out to show graph of all data with relationships that the user is 
  authorized to see. 

MVP will only store URLs to law and cases, we will not ingest primary law in initial product deployment
Web scraping ingestion tool will be close following deployment, but not in MVP
Graph and image support may come in later version, but should have chart and document options in MVP

============================================================================================================

Wants to build a proof of concept.
Figure out a graph model that will support that.

Minimum viable product is the ability to track versions on a graph database that contains state licensing material that we will provide at some point in time?
> we can decide what the input mechanism is.
> has to be able to have version control at the cell level?
> specifying the chart layout? pick from certain things they want to include or not include in the chart.

David said he had 4 people coming to him to get the state charts in the last two months.

What he wants to build is an interface where we have all the elements of the law, where the user picks what they're doing or not doing.
> When we store this legal elements, there will be a boolean flag to ask a yes/no question.




-----------------------------------------------------------------------------------------------------------------------------

scope to state licensing charts

Need to be able to full text search.

Store state licensing information, don't have any federal information for the first release.

Have all the jurisdictions.

Have a number of different license classifications or license types.

Business channels like retail, wholesale, correspondent, broker, lead gen.

Identify the relevant scope of the law. The law has elements, those elements are necessary for the law to be in effect. Things that are going to have you rquire a license or exempt you from a license.

Definitions:
Trigger Elements - elements of the law that determine whether or not it applies.
Exemptions - Restaurantuer sells his house, he's not a mortgage firm so he's not subject to real estate/mortgage law.

THE WHAT!!!!! BOOOM:
We're answering whether or not a client needs a license depending on their criteria/who they are and the jurisdiction they are in, and delivering that answer to them with our justification.
> A license to what? Is that some of the clients criteria?

We have to ask what jurisdictions (states), and then we figure out the rules for each state, and then ask the clients the questions based on the rules for each state.

What states/what business activity are you doing?
> And are we asking questions about a company, a branch, an individual? etc?

Our data model should work for jaywalking and bank robbery.

3 classifications of license:
Company license - david pointed out there might be two types of company license, you need a different company license for headquarters vs a branch location.
Branch license
Orginator license

For example, to jaywalk:
You have to be a pedestrian.
> What's a pedestrian? Someone who is walking and not in a vehicle. A skateboard is not a vehicle unless it is motorized.
> What consitutes a street? A highway (residential maybe) that's on public property.

> Exemption: You can cross in the middle of the street if there is a crosswalk.

> Can you get ticket for jaywalking in a supermarket parking lot? No, because an element of the law requires that jaywalking must take place on public property.

We need the ability to classify the elements of the law across states.

Ie, in one state it may be called 'jaywalking' and in another state it might be called 'improper use of a roadway'.

We need to be able to classify these things together even if they are different.

At some point we need to query this whole set. -> ???

The assumptions are the client answers to a series of questions that constitute all of the elements all the exemptions. => Ok, so we gather the assumptions and kind of use them as our query.

> Where "all" means the superset of elements and exemptions for the included states in the chart.

The superset of elements and exemptions would be presented to them so that when they answer those questions, we can apply those answers in the determination of whether a license is required or not.
 
> The grounds being the elements and exemptions.

The exemptions can have elements themselves.

MVP:

Limited in scope to creating and delivering state charts.

The What:
A system to determine whether or not a client needs a particular license depending on their circumstances, and to deliver that answer to them with justification.

The clients circumstances might include their jurisdiction (ie the state they're operating in), if they're a business or an individual, etc. 
The answers to these questions may be dynamic, like filling out information on a dynamic form where certain inputs are only necessary based on the answers provided in other inputs.

States have laws that relate to different types of licenses. These laws have elements and exemptions that determine whether or not they will apply to our clients.

Elements (of the law): Conditions that determine how the law is applied.
Exemptions (of the law): Clauses that exempt the application of the law under certain circumstances.

Licenses:
3 types of licenses:
Originator License - license to make and sell mortgages.
Company License - license to do business in a particular state/location.
Branch License - license to engage in business outside the location stated in the company license.

Assumptions:
The circumstances of the clients situation which we'll use to determine what kind of license they need. Ie are they an individual or a company, do they have 
multiple locations, etc.

The Law:
Made up of elements and exemptions that describe how licensing works in different states for different entities.

Entities - who you are. A person, a business, etc.
Jurisdictions - states (for the purpose of the MVP)
Elements - clauses that describe how the law is applied. eg, 

Is it fair to say our clients will need either an originator license, a company license, a branch license, or no license? Are there any other possibilies?

So basically:

User wants to know what license they need.

1. They go to our website, the website asks for their assumptions, and it spits out a chart laying out what license they need and our reasoning behind it automatically.
2. They call us up/get in contact with us somehow, we figure out what their assumptions are, we create a chart based on their assumptions, and put it up on our website for them to view.

Questions:
How will we determine whether or not this MVP is valuable?
How much runway do we have to complete this goal?
